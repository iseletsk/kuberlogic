---
apiVersion: keycloak.org/v1alpha1
kind: Keycloak
metadata:
  name: kuberlogic-keycloak
  namespace: {{ .Release.Namespace }}
  labels:
  {{ toYaml .Values.labels | nindent 4 }}
spec:
  instances: 1
  extensions:
    - https://github.com/aerogear/keycloak-metrics-spi/releases/download/1.0.4/keycloak-metrics-spi-1.0.4.jar
  externalAccess:
    enabled: False
  podDisruptionBudget:
    enabled: False
  externalDatabase:
    enabled: False
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakRealm
metadata:
  name: kuberlogic
  namespace: {{ .Release.Namespace }}
  labels:
  {{ toYaml .Values.labels | nindent 4 }}
spec:
  realm:
    id: "{{ .Values.realm.id }}"
    realm: "{{ .Values.realm.name }}"
    accessTokenLifespan: 3600
    accessTokenLifespanForImplicitFlow: 3600
    registrationAllowed: false
    enabled: true
    displayName: "Kuberlogic"
    eventsListeners:
      - "metrics-listener"
    userManagedAccessAllowed: true
    users:
      - username: "{{ .Values.realm.name }}"
        firstName: "Kuberlogic"
        lastName: "Realm"
        email: "realm@kuberlogic.com"
        emailVerified: False
        credentials:
          - type: password
            value: secret
            temporary: false
        realmRoles:
          - "offline_access"
          - "uma_authorization"
        clientRoles:
          account:
            - "manage-account"
            - "view-profile"
          realm-management:
            - "manage-users"
            - "view-users"
            - "query-users"
            - "create-client"
  instanceSelector:
    matchLabels:
  {{ toYaml .Values.labels | nindent 6 }}
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: apiserver
  namespace: {{ .Release.Namespace }}
  labels:
  {{ toYaml .Values.labels | nindent 4 }}
spec:
  realmSelector:
    matchLabels:
  {{ toYaml .Values.labels | nindent 6 }}
  client:
    clientId: {{ .Values.clientId }}
    secret: {{ .Values.clientSecret }}
    clientAuthenticatorType: client-secret
    protocol: openid-connect
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    authorizationServicesEnabled: {{ .Values.authorization.enabled }}
    authorizationSettings:
      allowRemoteResourceManagement: true
      resources:
        - name: "*"
          type: kuberlogicservice
          scopes:
            - name: "service:*"
      policies:
        - name: kuberlogic-system-allow
          type: user
          logic: POSITIVE
          config:
            users: '["{{ .Values.realm.name }}"]'
        - name: kuberlogic-system-full
          type: scope
          decisionStrategy: UNANIMOUS
          config:
            applyPolicies: '["kuberlogic-system-allow"]'
            scopes: '["service:*"]'
            resources: '["*"]'
    protocolMappers:
      - name: "apiserver-aud"
        protocol: "openid-connect"
        consentRequired: false
        protocolMapper: "oidc-audience-mapper"
        config:
          included.client.audience: "{{ .Values.clientId }}"
          access.token.claim: "true"
    defaultRoles:
    - "uma_protection"